<!--
This is the UPC lookup page. Users have the ability to add new items by typing in the item's UPC barcode
into the barcode text field. Searching the barcode will autopopulate the item's name pulling it from the
UPC item database. The user would then enter in a location for their item to be sorted in for organizational
purposes, as well as enter in the quantity of that item as well as have the ability to upload an image for
that item.
-->

<h1>Add Item - UPC Lookup</h1>
<hr/>

<div id="status"></div>

<form>
  <div class="form-group row">
    <label for="barCode" class="col-sm-2">Item Barcode</label>
    <div class="col-sm-4 input-group">
      <input type="text" class="form-control" id="barCodeBox" required="required" autofocus>
      <button class="btn btn-default" id='upcLookupButton'>
        <i class="fas fa-search"></i>
      </button>
    </div>
  </div>

  <div class="form-group row">
    <label for="nameBox" class="col-sm-2">Item Name</label>
    <div class="col-sm-4">
      <input type="text" class="form-control" id="nameBox" required="required" maxlength="32">
    </div>
  </div>

  <div class="form-group row">
    <label for="locationBox" class="col-sm-2">Item Location</label>
    <div class="col-sm-4">
      <input type="text" list='locationsList' class="form-control" id="locationBox" required="required">
      <datalist id='locationsList'>
      </datalist>
    </div>
  </div>

  <div class="form-group row">
    <label for="itemImg" class="col-sm-2">Item Image</label>
    <div class="col-sm-4">
      <input type="file" id="imgInput" name="pic" accept="image/*">
      <img style="max-width: 300px; max-height: 300px;" id="itemImg" src="#" alt="Your Image."/>
    </div>
  </div>

  <div class="form-group row">
    <label for="numBox" class="col-sm-2">Item Quantity</label>
    <div class="col-sm-4">
      <input type="number" class="form-control" id="numBox" required="required">
    </div>
  </div>

  <div class="form-group row">
    <div class="col-sm-12">
      <button type="button" class="btn btn-success" id='insertButton'>Add Item</button>
      <div id="status"></div>
    </div>
  </div>
</form>

<div id="status"></div>

<script>
var selectedFile;
$(document).ready(() => {
  const database = firebase.database();
  const storage = firebase.storage();

  database.ref('items/').on('value', (snapshot) => {
    const allLocations = snapshot.val();
    var str = ''
    Object.keys(allLocations).forEach((location) => {

      str += '<option value="'+location+'" />';
    });

    var list = document.getElementById("locationsList");
    list.innerHTML = str;

  });

  $('#status').html(''); // clear the HTML
  $('#itemImg').hide();

  //listener for the upc lookup button which makes an ajax call to the api to
  //get information about the upc  code
  $('#upcLookupButton').click(() => {
    const upcCode = $('#barCodeBox').val();
    if (upcCode == "") {
      return;
    } else {
      console.log(upcCode);
      $.ajax({
        method: 'POST',
        url: '/addItem/upcLookup?upc=' + upcCode,
        datatype: 'json',
        success: (data) => {
          console.log(data);
          switch (data.statusCode) {
            case 200:
              $.each(data.body.items, (index, element) => {
                $('#nameBox').val(element.title.slice(0, 32));
                $('#barCodeBox').val(element.upc);
                if (element.images[0]) {
                  $('#itemImg').attr('src', element.images[0]);
                  $('#itemImg').show();
                  selectedFile = element.images[0];
                }
              });
              break;
            case 400:
              $('#status').append(data.body.message + ' Please try again.');
              break;
          }
        }
      });
    }
  });

  function readURL(input) {
    if (input.files && input.files[0]) {
      var reader = new FileReader();

      reader.onload = function(e) {
        $('#itemImg').attr('src', e.target.result);
        $('#itemImg').show();
      }
      reader.readAsDataURL(input.files[0]);
    }
  }

  $("#imgInput").change(function() {
    readURL(this);
    selectedFile = event.target.files[0];
  });

 $('#insertButton').click(() => {
    const itemName = $('#nameBox').val();
    const itemNumber = $('#numBox').val()
    const itemUnit = "unit";
    const barCode = $('#barCodeBox').val();
    const location = $('#locationBox').val();
    if(itemName == "" || itemUnit == "" || barCode == "") {
      console.log('no input')
      return;
    }
    const dbLink = location + '/' +barCode + '/'+itemUnit;
    const key = 'items/' + dbLink;
    console.log(dbLink);
    // 'once' reads the value once from the database
    database.ref(key).once('value', (snapshot) => {
      const data = snapshot.val();
      const directory = 'items/' + location +'/'+ barCode + '/'+ itemUnit + '/'
      //if no data exists in db add new entry
      if (!data) {
        if(parseInt(itemNumber) > 0){
          database.ref('items/' + location + '/' + barCode + '/'+itemUnit).set({
            number: itemNumber,
            unit: itemUnit,
            name: itemName,
            image: null,
            barcode: barCode
          });
          database.ref('items/' + location + '/' + barCode ).update({
            name: itemName
          });
        }
        else {
          console.log("error");
          alert("ERROR: Add amount is Negative!")
        }
      }
      else if (data.number) {
        if(parseInt(itemNumber) > 0){
          total = parseInt(data.number) + parseInt(itemNumber);
          database.ref('items/' + location +'/'+ barCode + '/'+itemUnit).set({
            number: total,
            unit: itemUnit,
            name: itemName,
            image: null,
            barcode: barCode
          });
          uploadImages(selectedFile, directory);
        }
        else{
          console.log("error");
          alert("ERROR: Add amount is Negative!");
        }
      }
      uploadImages(selectedFile, directory);
    });
  });

  //This function allows the user to upload an image for the item they are adding to their inventory.
  function uploadImages(file, reference) {
    //sanity check for item being created
    if (reference) {
      // if we are using user-uploaded file
      const fileType = typeof(file);
      if (fileType === 'object') {
        var metadata = {
          contentType: 'image/jpeg',
        };
        var storageRef = firebase.storage().ref(reference+ file.name);
        var uploadTask = storageRef.put(file, metadata);
        uploadTask.on('state_changed', function(snapshot){
        // Observe state change events such as progress, pause, and resume
        // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded
        var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;
        console.log('Upload is ' + progress + '% done');
        switch (snapshot.state) {
          case firebase.storage.TaskState.PAUSED: // or 'paused'
            console.log('Upload is paused');
            break;
          case firebase.storage.TaskState.RUNNING: // or 'running'
            console.log('Upload is running');
            break;
          }
        }, function(error) {
          // Handle unsuccessful uploads
        }, function() {
          // Handle successful uploads on complete
          // For instance, get the download URL: https://firebasestorage.googleapis.com/...
          uploadTask.snapshot.ref.getDownloadURL().then(function(downloadURL) {
            database.ref(reference).update({
              image: downloadURL
            });
            document.location.href = '/viewInventory';
          });
        });
        //if we are using API image, set image attr to image URL instead of uploading user file
      } else if (fileType === 'string') {
        database.ref(reference).update({
          image: file
        });
        document.location.href = '/viewInventory';
        // if no image was received from API and no user image upload, use a template image
      } else {
        console.log("No image file, defaulting to template image.");
        database.ref(reference).update({
          image: 'https://cdn3.iconfinder.com/data/icons/minicons-for-web-sites/24/minicons-95-512.png'
        });
        document.location.href = '/viewInventory';
      }
    } else {
      alert("No DB reference for img to refer to, please consult your nearest codemonkey.");
    }
    return;
  }
});
</script>
