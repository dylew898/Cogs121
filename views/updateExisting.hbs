<!-- This page is used to update existing items that are already in the database.
It queries the firebase database for pre-existing data and then populates the
select boxes. There are also listeners on ever select box that detects when a
user chooses something so that the next box can also be populated. Finally, the
submit button updates the item information in the firebase database.  -->

<h1>{{title}}</h1>
<hr/>

<form>
  <div class="form-group row">
    <label for="locationSelect" class="col-sm-2">Item Location</label>
    <div class="col-4">
      <select class="form-control" id="locationSelect">
      <option value="">-- Select --</option>
      </select>
    </div>
  </div>

  <div class="form-group row">
    <label for="nameSelect" class="col-sm-2">Item Name</label>
    <div class="col-4">
      <select class="form-control" id="nameSelect">
      <option value="">-- Select --</option>
      </select>
    </div>
  </div>

  <div class="form-group row">
    <label for="itemImg" class="col-sm-2">Item Image</label>
    <div class="col-sm-4">
      <img style="max-width: 300px; max-height: 300px;" id="itemImg" src="#" alt="Item Image"/>
      <span id="image-placeholder-text">Please select an item.</span>
    </div>
  </div>

  <div class="form-group row">
      <label for="nameSelect" class="col-sm-2">Item Barcode</label>
      <div class="col-4">
      <input class="form-control" id="barCodeBox" type='text' size = '20' readonly/>
    </div>
  </div>

  <div class="form-group row">
      <label for="nameSelect" class="col-sm-2">Current Stock</label>
      <div class="col-4">
      <input class="form-control" id="numBox" type='text' size="20" required="required" readonly/>
    </div>
  </div>

  <div class="form-group row">
      <label for="nameSelect" class="col-sm-2">Add Amount</label>
      <div class="col-4">
      <input class="form-control" id="checkNumBox" type='number' size="20" required="required" />
    </div>
  </div>
</form>

<button type="button" class="btn btn-success" id='checkoutButton'>Update Items</button>

<!-- Remove status for final turn-in! -->
<br/>
<br/>
<br/>
<div id="status"></div>


<script>
$(document).ready(() => {
$('#itemImg').hide();
//populate the first select box upon the page being loaded in
const database = firebase.database();

var x = document.getElementById("locationSelect");


database.ref('items/').on('value', (snapshot) => {
  allItems = snapshot.val();
  Object.keys(allItems).forEach((name) => {
    var option = document.createElement("option");
    option.text = name;
    option.value = name;
    x.add(option);
  });
});

//auto populating based on what location was selected for the following box
$('#locationSelect').on('change', function(e){
  var yourSelect = document.getElementById("locationSelect");
  var selectedName = yourSelect.options[yourSelect.selectedIndex].value;
  if (selectedName == ''){
    var select = document.getElementById("nameSelect");
    document.getElementById('nameSelect').innerHTML = "";
    option.text = '--Select--';
    select.add(option);
  }
  database.ref('items/' + selectedName).on('value', (snapshot) => {
    var select = document.getElementById("nameSelect");
    document.getElementById('nameSelect').innerHTML = "";
    allItems = snapshot.val();

    var option = document.createElement("option");
    option.text = '--Select--';
    select.add(option);
    Object.keys(allItems).forEach((name) => {
      var option = document.createElement("option");
      option.text = allItems[name].name;
      option.value = name;
      select.add(option);
    });
  });
});

//populate boxes  based on what name was  selected
$('#nameSelect').on('change', function(e){
  var yourSelect = document.getElementById("nameSelect");
  var selectedName = yourSelect.options[yourSelect.selectedIndex].value;
  var locationSelect = document.getElementById("locationSelect");
  var location = locationSelect.options[locationSelect.selectedIndex].value;

  selectedUnit = 'unit'
  database.ref('items/' + location+'/'+selectedName+ '/' + selectedUnit).on('value', (snapshot) => {
    var vals = snapshot.val();
    $('#barCodeBox').val(selectedName);
    $('#numBox').val(vals.number);
    $('#itemImg').attr("src", vals.image);
    $('#itemImg').show();
    $('#image-placeholder-text').hide();
    console.log(selectedName)
  });
});

//grab all the information from the selects and  text boxes, then update the
//information in the firebase database.
$('#checkoutButton').click(() => {
  const yourSelect = document.getElementById("nameSelect");
  const name = yourSelect.options[yourSelect.selectedIndex].text;

  const units = 'unit'

  var locationSelect = document.getElementById("locationSelect");
  var location = locationSelect.options[locationSelect.selectedIndex].value;

  const barCode = $('#barCodeBox').val();
  if( name == "" || units == "" || $('#checkNumBox').val()=='') {
    console.log('no input')
    return;
  }
  const dbLink = location+'/'+barCode + '/'+units;
  const key = 'items/' + dbLink;
  console.log(key)
  // 'once' reads the value once from the database
  database.ref(key).once('value', (snapshot) => {
    const data = snapshot.val();
    console.log('You received some data!', data);
    if (!data) {
      // clear the display
      console.log('Item does not Exist');
      return;
    }
    if (data.unit) {
      const checkoutAmount = parseInt($('#checkNumBox').val());
      console.log('hi');

      if (data.unit) {
        console.log('hi');
        total = parseInt(data.number) + checkoutAmount;
        database.ref('items/' +location+'/'+barCode + '/'+units).update({
          number: total,
        });
      } else {
        // clear the display
        console.log("error");
        alert("ERROR: Checkout amount is greater than available!")
      }
        return;
      }
    });
    document.location.href = '/viewInventory';
  });
});
</script>
