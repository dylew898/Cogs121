<!-- This page allows the user to manually input items into the database. There are
multiple input boxes that they can fill out, such as bar code, quantity and an
image. The submit button updates the firebase database. -->
<h1>{{title}}</h1>
<hr/>

<form>
  <div class="form-group row">
    <label for="barCode" class="col-sm-2">Item Barcode</label>
    <div class="col-sm-4 input-group">
      <input type="text" class="form-control" id="barCodeBox" required="required" autofocus>
    </div>
  </div>

  <div class="form-group row">
    <label for="nameBox" class="col-sm-2">Item Name</label>
    <div class="col-sm-4">
      <input type="text" class="form-control" id="nameBox" maxlength="32" required="required">
    </div>
  </div>

  <div class="form-group row">
    <label for="locationBox" class="col-sm-2">Item Location</label>
    <div class="col-sm-4">
      <input type="text" class="form-control" id="locationBox" required="required">
    </div>
  </div>

  <div class="form-group row">
    <label for="itemImg" class="col-sm-2">Item Image</label>
    <div class="col-sm-4">
      <input type="file" id="imgInput" name="pic" accept="image/*">
      <img style="max-width: 300px; max-height: 300px;" id="itemImg" src="#" alt="Item Image"/>
    </div>
  </div>

  <div class="form-group row">
    <label for="numBox" class="col-sm-2">Item Quantity</label>
    <div class="col-sm-4">
      <input type="number" class="form-control" id="numBox" required="required">
    </div>
  </div>

  <div class="form-group row">
    <div class="col-sm-12">
      <button type="button" class="btn btn-success" id='insertButton'>Add Item</button>
    </div>
  </div>
</form>

<script>
var selectedFile;

//setup the page
$(document).ready(() => {
  const database = firebase.database();
  const storage = firebase.storage();

  $('#status').html(''); // clear the HTML
  $('#itemImg').hide();

  function readURL(input) {
    if (input.files && input.files[0]) {
      var reader = new FileReader();

      reader.onload = function(e) {
        $('#itemImg').attr('src', e.target.result);
        $('#itemImg').show();
      }
      reader.readAsDataURL(input.files[0]);
    }
  }

  $("#imgInput").change(function() {
    readURL(this);
    selectedFile = event.target.files[0];
  });

  database.ref('items/' ).on('value', (snapshot) => {
    allItems = snapshot.val();
    Object.keys(allItems).forEach((id) => {
      console.log(id);
      const typeDict = allItems[id]
        Object.keys(typeDict).forEach((type) => {
          if(type != "name"){
            console.log("ID: "+ id+" Name: "+ typeDict[type].name + " Type: " + type + " Number: "+ typeDict[type].number)
          }
        });
      });
    });

  $('#insertButton').click(() => {
    const itemName = $('#nameBox').val();
    const itemNumber = $('#numBox').val()
    const itemUnit = "unit";
    const barCode = $('#barCodeBox').val();
    const location = $('#locationBox').val();
    if(itemName == "" || itemUnit == "" || barCode == "") {
      console.log('no input')
      return;
    }
    const dbLink = location + '/' +barCode + '/'+itemUnit;
    const key = 'items/' + dbLink;
    console.log(dbLink);
    // 'once' reads the value once from the database
    database.ref(key).once('value', (snapshot) => {
      const data = snapshot.val();
      console.log('You received some data!', data);

      const directory = 'items/' + location +'/'+ barCode + '/'+ itemUnit + '/'
      //if no data exists in db add new entry
      if (!data) {
        if(parseInt(itemNumber) > 0){
          database.ref('items/' + location + '/' + barCode + '/'+itemUnit).set({
            number: itemNumber,
            unit: itemUnit,
            name: itemName,
            image: null,
            barcode: barCode
          });
          database.ref('items/' + location + '/' + barCode ).update({
            name: itemName
          });
          uploadImages(selectedFile, directory);
        }
        else {
          console.log("error");
          alert("ERROR: Add amount is Negative!")
        }
      }
      else if (data.number) {
        console.log('2222')
        if(parseInt(itemNumber) > 0){
          total = parseInt(data.number) + parseInt(itemNumber);
          database.ref('items/' + location +'/'+ barCode + '/'+itemUnit).set({
            number: total,
            unit: itemUnit,
            name: itemName,
            image: null,
            barcode: barCode
          });
          uploadImages(selectedFile, directory);
        }
        else{
          console.log("error");
          alert("ERROR: Add amount is Negative!")
        }

      }
    });
  });

  function uploadImages(file, reference) {
    if (reference) {
      if (file) {
        var metadata = {
          contentType: 'image/jpeg',
        };
        var storageRef = firebase.storage().ref(reference+ file.name);
        var uploadTask = storageRef.put(file, metadata);
        uploadTask.on('state_changed', function(snapshot){
        // Observe state change events such as progress, pause, and resume
        // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded
        var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;
        console.log('Upload is ' + progress + '% done');
        switch (snapshot.state) {
          case firebase.storage.TaskState.PAUSED: // or 'paused'
            console.log('Upload is paused');
            break;
          case firebase.storage.TaskState.RUNNING: // or 'running'
            console.log('Upload is running');
            break;
          }
        }, function(error) {
          // Handle unsuccessful uploads
        }, function() {
          // Handle successful uploads on complete
          // For instance, get the download URL: https://firebasestorage.googleapis.com/...
          uploadTask.snapshot.ref.getDownloadURL().then(function(downloadURL) {
            console.log('File available at', downloadURL);
            database.ref(reference).update({
              image: downloadURL
            });
            document.location.href = '/viewInventory';
          });
        });
      } else {
        console.log("No image file, defaulting to template image.");
        database.ref(reference).update({
          image: 'https://cdn3.iconfinder.com/data/icons/minicons-for-web-sites/24/minicons-95-512.png'
        });
        document.location.href = '/viewInventory';
      }
    } else {
      console.log("No DB reference for img to refer to.")
    }
  }
});
</script>
